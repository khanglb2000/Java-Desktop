/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ui;

import connect.Category;
import connect.Product;
import connect.Service;
import java.text.DecimalFormat;
import java.util.ArrayList;
import java.util.Random;
import java.util.Vector;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author hi
 */
public class Screen extends javax.swing.JFrame {

    /**
     * Creates new form Screen
     */
    
    String currentCategoryName = null;
    String currentCategoryID = null;
    String currentProduntID = null;
    String newID = null;
    String newName = null;
    
    Vector header = new Vector<>();
    Vector data = new Vector<>();
    
    DefaultListModel<String> listModel = new DefaultListModel<>();
    DefaultTableModel dtm;
    
    boolean addNew = false;
    boolean change = false;
    Service ser = new Service();
    
    ArrayList<String> categoryIdList = new ArrayList<>();
    
    public Screen() {
        initComponents();
        header.add("Product ID");header.add("Product Name");header.add("Quanlity");header.add("Price");
        dtm = (DefaultTableModel)tbl.getModel();
        dtm.setDataVector(data, header);
        loadCategoryData();
        cbox.setEnabled(false);
        btnSave.setEnabled(false);
   
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFrame1 = new javax.swing.JFrame();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txtNewId = new javax.swing.JTextField();
        txtNewName = new javax.swing.JTextField();
        btnSubmit = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();
        btnC = new javax.swing.JButton();
        pCatagory = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        JList = new javax.swing.JList<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        tbl = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        btnNew = new javax.swing.JButton();
        btnSave = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        cbox = new javax.swing.JComboBox<>();
        txtProductID = new javax.swing.JTextField();
        txtProductName = new javax.swing.JTextField();
        txtQuantity = new javax.swing.JTextField();
        txtPrice = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        txtSearch = new javax.swing.JTextField();
        btnClear = new javax.swing.JButton();
        btnNewC = new javax.swing.JButton();
        btnUpdateC = new javax.swing.JButton();
        btnDeleteC = new javax.swing.JButton();

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel6.setText("New ID");

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel7.setText("New Name");

        txtNewId.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N

        txtNewName.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        txtNewName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNewNameActionPerformed(evt);
            }
        });

        btnSubmit.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        btnSubmit.setText("Submit");
        btnSubmit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSubmitActionPerformed(evt);
            }
        });

        btnBack.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        btnBack.setText("Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        btnC.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        btnC.setText("Clear");
        btnC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jFrame1Layout = new javax.swing.GroupLayout(jFrame1.getContentPane());
        jFrame1.getContentPane().setLayout(jFrame1Layout);
        jFrame1Layout.setHorizontalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jFrame1Layout.createSequentialGroup()
                .addGap(67, 67, 67)
                .addGroup(jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel7)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 97, Short.MAX_VALUE)
                .addGroup(jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtNewId, javax.swing.GroupLayout.PREFERRED_SIZE, 531, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtNewName, javax.swing.GroupLayout.PREFERRED_SIZE, 531, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jFrame1Layout.createSequentialGroup()
                        .addComponent(btnSubmit, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(91, 91, 91)
                        .addComponent(btnC, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 78, Short.MAX_VALUE))
        );
        jFrame1Layout.setVerticalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jFrame1Layout.createSequentialGroup()
                .addContainerGap(130, Short.MAX_VALUE)
                .addGroup(jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtNewId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addGap(47, 47, 47)
                .addGroup(jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtNewName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addGap(48, 48, 48)
                .addGroup(jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSubmit, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnC, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(94, 94, 94))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setLayout(new java.awt.GridLayout(1, 0));

        JList.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        JList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                JListMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                JListMousePressed(evt);
            }
        });
        jScrollPane1.setViewportView(JList);

        tbl.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        tbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbl.setRowHeight(30);
        tbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tbl);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setText("Catagory:");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel2.setText("Product ID:");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel3.setText("Product Name:");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel4.setText("Quantity:");

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel5.setText("Price:");

        btnNew.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnNew.setText("New");
        btnNew.setPreferredSize(new java.awt.Dimension(160, 40));
        btnNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNewActionPerformed(evt);
            }
        });

        btnSave.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnSave.setText("Save");
        btnSave.setPreferredSize(new java.awt.Dimension(160, 40));
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        btnDelete.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnDelete.setText("Delete");
        btnDelete.setPreferredSize(new java.awt.Dimension(160, 40));
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        cbox.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        txtProductID.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        txtProductName.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        txtQuantity.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        txtPrice.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel8.setText("Search");

        txtSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtSearchKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtSearchKeyTyped(evt);
            }
        });

        btnClear.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnClear.setText("Clear");
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel4)
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel3Layout.createSequentialGroup()
                                    .addGap(56, 56, 56)
                                    .addComponent(jLabel1))
                                .addGroup(jPanel3Layout.createSequentialGroup()
                                    .addContainerGap()
                                    .addComponent(jLabel3)))
                            .addComponent(jLabel5)
                            .addComponent(jLabel2)
                            .addComponent(jLabel8))
                        .addGap(42, 42, 42)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(txtPrice, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtQuantity, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtProductName, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtProductID, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cbox, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel3Layout.createSequentialGroup()
                                .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnClear, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(btnNew, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnSave, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(82, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtSearch, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 28, Short.MAX_VALUE)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel8)
                        .addComponent(btnClear)))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(cbox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtProductID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtProductName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnNew, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSave, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21))
        );

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(4, 4, 4)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 457, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(180, 180, 180)
                        .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 704, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(90, Short.MAX_VALUE))))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 333, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 531, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(160, Short.MAX_VALUE))
        );

        btnNewC.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnNewC.setText("New Catagory");
        btnNewC.setPreferredSize(new java.awt.Dimension(143, 40));
        btnNewC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNewCActionPerformed(evt);
            }
        });

        btnUpdateC.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnUpdateC.setText("Update Catagory");
        btnUpdateC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateCActionPerformed(evt);
            }
        });

        btnDeleteC.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnDeleteC.setText("Delete Catagory");
        btnDeleteC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteCActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pCatagoryLayout = new javax.swing.GroupLayout(pCatagory);
        pCatagory.setLayout(pCatagoryLayout);
        pCatagoryLayout.setHorizontalGroup(
            pCatagoryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(pCatagoryLayout.createSequentialGroup()
                .addComponent(btnNewC, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnUpdateC)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnDeleteC, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(pCatagoryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(pCatagoryLayout.createSequentialGroup()
                    .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        pCatagoryLayout.setVerticalGroup(
            pCatagoryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pCatagoryLayout.createSequentialGroup()
                .addContainerGap(555, Short.MAX_VALUE)
                .addGroup(pCatagoryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnNewC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnUpdateC, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnDeleteC, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(118, 118, 118)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(pCatagoryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(pCatagoryLayout.createSequentialGroup()
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addContainerGap()))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pCatagory, javax.swing.GroupLayout.PREFERRED_SIZE, 1221, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(pCatagory, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnNewCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNewCActionPerformed
        jFrame1.setSize(800,400);
        jFrame1.setVisible(true);
        
    }//GEN-LAST:event_btnNewCActionPerformed

    public boolean validateInfo(String id, String name){
        String rex = "^[a-zA-Z0-9]+";
        String rex1 = "^[a-zA-Z0-9\\s]+";
        Service c = new Service();
        try {
            if(name.startsWith(" ")){
                JOptionPane.showMessageDialog(this, "Invalied input");
                return false;
            }
            if(id.trim().length() == 0 || name.trim().length() == 0){
                JOptionPane.showMessageDialog(this, "Blank String Error");
                return false;
            }
            if(id.isEmpty() || name.isEmpty()){
                JOptionPane.showMessageDialog(this, "Empty Error");
                return false;
            }
            if(!id.matches(rex)){
                JOptionPane.showMessageDialog(this, "Invalied id input");
                return false;
            }
            if(!name.matches(rex1)){
                JOptionPane.showMessageDialog(this, "Invalied name input");
                return false;                
            }
            if(c.getCategoryByID(id) != null){
                JOptionPane.showMessageDialog(this, "There is already a category with that id");
                return false;
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        return true;        
    }    
    public boolean validateString(String x){
        String rex = "^[a-zA-Z0-9\\s]+";
//        Service c = new Service();
        try {
            if(x.startsWith(" ")){
                JOptionPane.showMessageDialog(this, "Invalied name input");
                return false;
            }
            if(x.trim().length() == 0){
                JOptionPane.showMessageDialog(this, "Black String Error");
                return false;
            }
            if(x.isEmpty()){
                JOptionPane.showMessageDialog(this, "Empty");
                return false;
            }
            if(!x.matches(rex)){
                JOptionPane.showMessageDialog(this, "Invalied name input.");
                return false;
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        return true;
    }
    private void btnDeleteCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteCActionPerformed
        String capcha = capcha();
        String validate = JOptionPane.showInputDialog(this,"Please enter this "+ capcha);
       
        if(currentCategoryName != null && currentCategoryID != null){
            btnSave.setEnabled(false);
            change = false;
            System.out.println(capcha);
            System.out.println(validate);
             if(validate.equals(capcha)){
            try {
                int numberOfProduct = ser.getNumberOfProduct(currentCategoryID);
                if(numberOfProduct > 0){
                    if(JOptionPane.showConfirmDialog(this,"There is "+numberOfProduct+" still exist\nContinue anyway ",
                            "Delete a catagory", JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION){
                        ser.deletedAllProduct(currentCategoryID);
                        ser.deletedCatagory(currentCategoryID);
                        data.clear();
                        dtm.setDataVector(data, header);
                        loadCategoryData();
                        currentCategoryID = null;
                    }
                }else{
                    if(JOptionPane.showConfirmDialog(this,"Are you sure","Delete a catagory", 
                            JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION){
                        ser.deletedCatagory(currentCategoryID);
                        loadCategoryData();
                        currentCategoryID = null;
                    }                    
                }
            } catch (Exception e) {
                e.printStackTrace();
            }
            }else{
                 JOptionPane.showMessageDialog(this, "Wrong capcha");
             }
        }else{
            JOptionPane.showMessageDialog(this, "Please choose a catagory!");
        }
    }//GEN-LAST:event_btnDeleteCActionPerformed

    private void JListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_JListMouseClicked
        currentCategoryName = JList.getSelectedValue();
        resetProdutInput();
        cbox.setEnabled(false);
        if(categoryIdList.get(JList.getSelectedIndex()) != null){
            currentCategoryID = categoryIdList.get(JList.getSelectedIndex());
        }
        try {
            if(currentCategoryName != null && currentCategoryID != null){
                cbox.setSelectedIndex(JList.getSelectedIndex());                
                loadProduct();
                dtm.setDataVector(data, header);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_JListMouseClicked

    private void btnUpdateCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateCActionPerformed
        if(currentCategoryID != null && currentCategoryName != null){
            if(JOptionPane.showConfirmDialog(this,"Are you sure","Rename a catagory", 
                    JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION){
                String newName = JOptionPane.showInputDialog(this,"Enter new name");
                if(newName != null){
                    if(validateString(newName) == true){
                        try {
                            Service c = new Service();
                            if(validateString(newName) == true){
                                c.updateCategoryName(currentCategoryID, newName);
                                loadCategoryData();
                            }
                        } catch (Exception e) {
                            e.printStackTrace();
                        }                          
                    }else{
                        return;
                    }
                }else{
                   return; 
                }
            }            
        }else{
            JOptionPane.showMessageDialog(this, "Please choose a catagory!");
        }
    }//GEN-LAST:event_btnUpdateCActionPerformed

    private void btnNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNewActionPerformed
        addNew = true;
        change = false;
        btnSave.setEnabled(true);
        cbox.setEnabled(true);
        txtProductID.setEditable(true);
        txtProductID.setText("");
        txtProductName.setText("");
        txtPrice.setText("");
        txtQuantity.setText("");
    }//GEN-LAST:event_btnNewActionPerformed
            
    private void tblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblMouseClicked
        addNew = false;
        change = true;
        resetProdutInput();
        btnSave.setEnabled(true);
        cbox.setEditable(false);
        try {
            currentProduntID = tbl.getValueAt(tbl.getSelectedRow(), 0).toString();
            Product x = ser.getProductByID(currentProduntID);
            setProductPage(x);
            
        } catch (Exception e) {
            e.printStackTrace();
        }
            
    }//GEN-LAST:event_tblMouseClicked

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        String productID = txtProductID.getText();
        String productName = txtProductName.getText();
        String tQuantity = txtQuantity.getText();
        String tPrice = txtPrice.getText();        
        if(isProductInputValid(productID, productName, tQuantity, tPrice) == false){
            return;
        }
        DecimalFormat df = new DecimalFormat("#.##");
        
        int quantity = Integer.parseInt(tQuantity);
        String med = df.format(Double.parseDouble(txtPrice.getText()));
        //JOptionPane.showMessageDialog(this, med);
        double price = Double.parseDouble(med);
        if(addNew){
            try {
                if(ser.getProductByID(productID) != null){
                    JOptionPane.showMessageDialog(this, "There is already a product with this code");
                    return;
                }else{
                    Product x = new Product(productID, productName, quantity, price, categoryIdList.get(cbox.getSelectedIndex()));
                    ser.newProduct(x);
                    addNew = false;
                    change = true;
                    loadProduct();
                    dtm.setDataVector(data, header);
                    JOptionPane.showMessageDialog(this, "A new product has been added!");
                    resetProdutInput();
                    btnSave.setEnabled(false);
                }          
                
            } catch (Exception e) {
                e.printStackTrace();
              
            }            
        }else if(change == true){
            if(currentProduntID != null){
                try {
                    Product x = new Product(productID, productName, quantity, price, categoryIdList.get(cbox.getSelectedIndex()));
                    ser.updateProduct(x);                
                    loadProduct();
                    dtm.setDataVector(data, header);
                    JOptionPane.showMessageDialog(this, "A product has been changed!");
                } catch (Exception e) {
                    e.printStackTrace();
                }                
            }
        }else{
            JOptionPane.showMessageDialog(this, "Please click on New or the List");
        }  
        
    }//GEN-LAST:event_btnSaveActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        if(currentProduntID != null){            
            try {
                if(JOptionPane.showConfirmDialog(this, "Are you sure","Delete product",
                        JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION){
                    resetProdutInput();
                    ser.deletedProduct(currentProduntID);
                    cbox.setEnabled(false);
                    loadProduct();
                    dtm.setDataVector(data, header);
                    currentProduntID = null;
                }                 
            } catch (Exception e) {
                e.printStackTrace();
            }
        }else{
            JOptionPane.showMessageDialog(this, "Please choose a product");
        }
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void txtSearchKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSearchKeyTyped
        TableRowSorter sorter = new TableRowSorter(dtm);
        tbl.setRowSorter(sorter);
        String str = txtSearch.getText();
        btnDelete.setEnabled(false);
        btnSave.setEnabled(false);
        btnNew.setEnabled(false);
        txtSearch.getDocument().addDocumentListener(new DocumentListener() {
            @Override
            public void insertUpdate(DocumentEvent e) {
                search(txtSearch.getText());
            }

            @Override
            public void removeUpdate(DocumentEvent e) {
                search(txtSearch.getText());
            }

            @Override
            public void changedUpdate(DocumentEvent e) {
                search(txtSearch.getText());
            }
            public void search(String str){
                if(str.length() == 0){
                    sorter.setRowFilter(null);
                }else{
                sorter.setRowFilter(RowFilter.regexFilter(str));
                }    
            }                

        });
    }//GEN-LAST:event_txtSearchKeyTyped

    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed
        txtSearch.setText("");
        btnNew.setEnabled(true);
        btnDelete.setEnabled(true);              
    }//GEN-LAST:event_btnClearActionPerformed

    private void txtSearchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSearchKeyReleased
        if(txtSearch.getText().trim().length() == 0){
            btnNew.setEnabled(true);
            btnDelete.setEnabled(true);
        }
    }//GEN-LAST:event_txtSearchKeyReleased

    private void txtNewNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNewNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNewNameActionPerformed

    private void btnSubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSubmitActionPerformed
        try {
            String id = txtNewId.getText();
            String name = txtNewName.getText();
            if(validateInfo(id, name) == false){
                return;
            }    
            //jFrame1.setAlwaysOnTop(true);
            ser.newCategory(id, name);
            JOptionPane.showMessageDialog(this, "A new category has been added");
            loadCategoryData();
            txtNewId.setText("");
            txtNewName.setText("");
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_btnSubmitActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        jFrame1.dispose();
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCActionPerformed
        txtNewId.setText("");
        txtNewName.setText("");
    }//GEN-LAST:event_btnCActionPerformed

    private void JListMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_JListMousePressed
        cbox.setEnabled(false);
    }//GEN-LAST:event_JListMousePressed
    public void resetProdutInput(){
        btnSave.setEnabled(false);
        txtProductID.setEditable(true);
        txtProductID.setText("");
        txtProductName.setText("");
        txtPrice.setText("");
        txtQuantity.setText("");        
    }
    public boolean isProductInputValid(String id, String name, String quantity, String price){
        String rex = "^[a-zA-Z0-9]+";
        String rex1 = "^[a-zA-Z0-9\\s]+";
        String rex3 = "^P\\d\\d\\d\\d";
        
        try {         
            if(id.trim().length() == 0 || name.trim().length() == 0 || quantity.trim().length() == 0 || price.trim().length() == 0){
                JOptionPane.showMessageDialog(this, "Blank Input ERROR");
                return false;
            }            
            if(!id.matches(rex1)){
                JOptionPane.showMessageDialog(this, "Invalied ID Input");
                return false;
            }
            if(!name.matches(rex1)){
                JOptionPane.showMessageDialog(this, "Invalied Name Input");
                return false;
            }
            int quan = Integer.parseInt(quantity);
            double pri = Double.parseDouble(price);            
            if(quan < 0){
                 JOptionPane.showMessageDialog(this, "Invalied quantity");
                return false;
            }
            
            if(pri < 0){
                 JOptionPane.showMessageDialog(this, "Invalied price");
                return false;
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "invalied input");
            return false;
        }
        
        
        return true;
    }
    
    public void setProductPage(Product x){
        txtProductID.setText(x.getProductID());
        txtProductID.setEditable(false);
        txtProductName.setText(x.getProductName());
        txtQuantity.setText(Integer.toString(x.getQuantity()));
        txtPrice.setText(Double.toString(x.getPrice()));
    }
    
    public void loadCategoryData(){
        try {
            Service c = new Service();
            listModel.clear();
            categoryIdList.clear();
            cbox.removeAllItems();
            ArrayList<Category> list = c.getCategoryData();
            if(!list.isEmpty()){
                for(int i = 0; i < list.size();i++){
                    listModel.addElement(list.get(i).getCategoryName());
                    cbox.addItem(list.get(i).getCategoryName());
                    categoryIdList.add(list.get(i).getCategoryID());                    
                }   
                JList.setModel(listModel);
            }
            
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
    
    public void loadProduct(){
        try {
            data.clear();
            Service c = new Service();
            if(currentCategoryName!= null && currentCategoryID != null){
                Vector<Product> list1 = c.getProductData(currentCategoryID);
                for (Product s : list1) {
                    Vector row = new Vector();
                    row.add(s.getProductID());
                    row.add(s.getProductName());
                    row.add(s.getQuantity());
                    row.add(s.getPrice());
                    data.add(row);
               
                }                
            }
        } catch (Exception e) {
        }         
    }
    
    public String capcha(){
        String result;
        StringBuilder capchaBuilder = new StringBuilder();
        Random rand = new Random();
        String alphaBee= "ABCDEFGHIJKLMNOPQRSTUVWSYZ0123456789";
        for(int i =0; i< 5; i++){
            int x = 1 + rand.nextInt(35);
            capchaBuilder.append(alphaBee.charAt(x));
        }
        return result = capchaBuilder.toString();
    }      
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Screen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Screen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Screen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Screen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Screen().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JList<String> JList;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnC;
    private javax.swing.JButton btnClear;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnDeleteC;
    private javax.swing.JButton btnNew;
    private javax.swing.JButton btnNewC;
    private javax.swing.JButton btnSave;
    private javax.swing.JButton btnSubmit;
    private javax.swing.JButton btnUpdateC;
    private javax.swing.JComboBox<String> cbox;
    private javax.swing.JFrame jFrame1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JPanel pCatagory;
    private javax.swing.JTable tbl;
    private javax.swing.JTextField txtNewId;
    private javax.swing.JTextField txtNewName;
    private javax.swing.JTextField txtPrice;
    private javax.swing.JTextField txtProductID;
    private javax.swing.JTextField txtProductName;
    private javax.swing.JTextField txtQuantity;
    private javax.swing.JTextField txtSearch;
    // End of variables declaration//GEN-END:variables
}
